name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  changed_files:
    runs-on: ubuntu-latest
    name: Test changed-files
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Get the list of changed files using tj-actions/changed-files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        # Optional: Compare changes between the current commit and the last pushed remote commit
        # with:
        #   since_last_remote_commit: true 

      # Step 3: List all changed files (for debugging purposes)
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Changed files:"
          echo "${ALL_CHANGED_FILES}" | tr ' ' '\n' | sed 's/^/ - /'

      # Step 4: Validate folder changes
      - name: Validate folder changes
        run: |
          # Extract the list of changed files into a variable
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"

          # Check for changes in any 'prod/' directory
          echo "$CHANGED_FILES" | grep -qE '(^|/)prod/' && PROD_CHANGED=true || PROD_CHANGED=false

          # Check for changes in any 'nonprod/' directory
          echo "$CHANGED_FILES" | grep -qE '(^|/)nonprod/' && NONPROD_CHANGED=true || NONPROD_CHANGED=false

          echo "PROD_CHANGED: $PROD_CHANGED"
          echo "NONPROD_CHANGED: $NONPROD_CHANGED"

          # Fail the job if both directories have changes
          if [ "$PROD_CHANGED" = "true" ] && [ "$NONPROD_CHANGED" = "true" ]; then
            echo "::error::Changes detected in both 'prod/' and 'nonprod/' directories. Please separate these changes into different pull requests."
            exit 1
          else
            echo "Validation passed: Changes are confined to a single directory ('prod/' or 'nonprod/')."
          fi
